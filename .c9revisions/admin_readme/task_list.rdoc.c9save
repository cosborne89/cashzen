{"ts":1378939934581,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"#task list\n\nX implement bourbon: go to github and make changes following install\nX implement devise: create a User model and devise_for user\nX implement cancan: create an Ability model\nX implement omniauth: create an Identity model for omniauth-identity and plug omniauth-google and omniauth-identity into devise\nX implement neat: go to github and make changes following install\n\n"]],"start1":0,"start2":0,"length1":0,"length2":380}]],"length":380}
{"contributors":[],"silentsave":false,"ts":1378940071305,"patch":[[{"diffs":[[0,"st\n\n"],[-1,"X implement bourbon: go to github and make changes following install\nX implement devise: create a User model and devise_for user\nX implement cancan: create an Ability model\nX implement omniauth: create an Identity model for omniauth-identity and plug omniauth-google and omniauth-identity into devise\nX implement neat: go to github and make changes following install\n\n"],[1,"_ budgets#index should show all budgets current month and scroll through (month view).\n_ category#show should show all categories and how much you've saved (saved view) and will drill down to category.budgets.each.remaining to show where you contributed the most.\n_ "]],"start1":8,"start2":8,"length1":372,"length2":270}]],"length":278,"saved":false}
{"contributors":[],"silentsave":false,"ts":1380215493946,"patch":[[{"diffs":[[0,"k list\n\n"],[-1,"_"],[1,"X"],[0," budgets"]],"start1":4,"start2":4,"length1":17,"length2":17},{"diffs":[[0," view).\n"],[-1,"_"],[1,"X"],[0," categor"]],"start1":91,"start2":91,"length1":17,"length2":17},{"diffs":[[0,"st.\n"],[-1,"_ "],[1,"X assocations are not created anywhere. need to be able to do current_user.budgets, etc\nX how to handle income and making sure your budget is balanced?\nX put categories#index into a custom #saved view. make categories#index the summary page (analytics + budget balance + categories by classification, frequency and need_type)\n_ Test nil cases (e.g. @categories.income if there is no income?) to not fail. Used during initial setup.\n_ Nested transaction partial with AJAX.\n_ Pull tables into partials to be refreshed on AJAX.\n\nnow have:\n    :frequency, :string - monthly (variable + fixed + income) or deferred (occasional, debt, savings) or single (spree)\n    :classification, :string - fixed, variable, occasional, debt, savings, income, spree\n    :need_type, :string - need, save or want\n    NO sprees"]],"start1":272,"start2":272,"length1":6,"length2":807}]],"length":1079,"saved":false}
{"ts":1380215513344,"patch":[[{"diffs":[[0,"on AJAX."],[1,"\n_ Consolidate table for category#view to be like budgets#index"],[0,"\n\nnow ha"]],"start1":792,"start2":792,"length1":16,"length2":79}]],"length":1142,"saved":false}
{"ts":1380215811385,"patch":[[{"diffs":[[0,"ts#index"],[1,"\n_ Add sum per category into categories#accrued and consolidate table\n_ Brainstorm on a calendar view for transactions."],[0,"\n\nnow ha"]],"start1":855,"start2":855,"length1":16,"length2":135}]],"length":1261,"saved":false}
{"contributors":[],"silentsave":false,"ts":1380298822915,"patch":[[{"diffs":[[0,"d_type)\n"],[-1,"_"],[1,"X"],[0," Test ni"]],"start1":594,"start2":594,"length1":17,"length2":17}]],"length":1261,"saved":false}
