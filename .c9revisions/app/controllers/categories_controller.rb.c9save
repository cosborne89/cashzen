{"ts":1378829329322,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"class CategoriesController < ApplicationController\n  before_action :set_category, only: [:show, :edit, :update, :destroy]\n\n  # GET /categories\n  # GET /categories.json\n  def index\n    @categories = Category.all\n  end\n\n  # GET /categories/1\n  # GET /categories/1.json\n  def show\n  end\n\n  # GET /categories/new\n  def new\n    @category = Category.new\n  end\n\n  # GET /categories/1/edit\n  def edit\n  end\n\n  # POST /categories\n  # POST /categories.json\n  def create\n    @category = Category.new(category_params)\n\n    respond_to do |format|\n      if @category.save\n        format.html { redirect_to @category, notice: 'Category was successfully created.' }\n        format.json { render action: 'show', status: :created, location: @category }\n      else\n        format.html { render action: 'new' }\n        format.json { render json: @category.errors, status: :unprocessable_entity }\n      end\n    end\n  end\n\n  # PATCH/PUT /categories/1\n  # PATCH/PUT /categories/1.json\n  def update\n    respond_to do |format|\n      if @category.update(category_params)\n        format.html { redirect_to @category, notice: 'Category was successfully updated.' }\n        format.json { head :no_content }\n      else\n        format.html { render action: 'edit' }\n        format.json { render json: @category.errors, status: :unprocessable_entity }\n      end\n    end\n  end\n\n  # DELETE /categories/1\n  # DELETE /categories/1.json\n  def destroy\n    @category.destroy\n    respond_to do |format|\n      format.html { redirect_to categories_url }\n      format.json { head :no_content }\n    end\n  end\n\n  private\n    # Use callbacks to share common setup or constraints between actions.\n    def set_category\n      @category = Category.find(params[:id])\n    end\n\n    # Never trust parameters from the scary internet, only allow the white list through.\n    def category_params\n      params.require(:category).permit(:title, :monthly_spend, :transaction_ids, :reset_on, :net_cash, :user_id, :spree)\n    end\nend\n"]],"start1":0,"start2":0,"length1":0,"length2":1971}]],"length":1971}
{"contributors":[],"silentsave":false,"ts":1378829338918,"patch":[[{"diffs":[[0,"s = "],[-1,"C"],[1,"current_user.c"],[0,"ategor"],[-1,"y.all"],[1,"ies"],[0,"\n  e"]],"start1":194,"start2":194,"length1":20,"length2":31}]],"length":1982,"saved":false}
{"ts":1378829347849,"patch":[[{"diffs":[[0,"egory = "],[-1,"C"],[1,"current_user.c"],[0,"ategor"],[-1,"y"],[1,"ies"],[0,".find(pa"]],"start1":1692,"start2":1692,"length1":24,"length2":39}]],"length":1997,"saved":false}
{"ts":1378829405743,"patch":[[{"diffs":[[0,"troller\n"],[1,"    load_and_authorize_resource\n"],[0,"  before"]],"start1":43,"start2":43,"length1":16,"length2":48}]],"length":2029,"saved":false}
{"ts":1378829595191,"patch":[[{"diffs":[[0,"r\n  "],[-1,"  load_and_authorize_resource"],[1,"before_action :authenticate_user!"],[0,"\n  b"]],"start1":49,"start2":49,"length1":37,"length2":41}]],"length":2033,"saved":false}
{"ts":1378830154527,"patch":[[{"diffs":[[0,"tegories"],[1,".basic\n    @sprees = current_user.categories.is_spree"],[0,"\n  end\n\n"]],"start1":249,"start2":249,"length1":16,"length2":69}]],"length":2086,"saved":false}
