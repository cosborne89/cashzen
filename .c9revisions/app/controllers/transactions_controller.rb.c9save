{"ts":1378918575456,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"class TransactionsController < ApplicationController\n  before_action :set_transaction, only: [:show, :edit, :update, :destroy]\n\n  # GET /transactions\n  # GET /transactions.json\n  def index\n    @transactions = Transaction.all\n  end\n\n  # GET /transactions/1\n  # GET /transactions/1.json\n  def show\n  end\n\n  # GET /transactions/new\n  def new\n    @transaction = Transaction.new\n  end\n\n  # GET /transactions/1/edit\n  def edit\n  end\n\n  # POST /transactions\n  # POST /transactions.json\n  def create\n    @transaction = Transaction.new(transaction_params)\n\n    respond_to do |format|\n      if @transaction.save\n        format.html { redirect_to @transaction, notice: 'Transaction was successfully created.' }\n        format.json { render action: 'show', status: :created, location: @transaction }\n      else\n        format.html { render action: 'new' }\n        format.json { render json: @transaction.errors, status: :unprocessable_entity }\n      end\n    end\n  end\n\n  # PATCH/PUT /transactions/1\n  # PATCH/PUT /transactions/1.json\n  def update\n    respond_to do |format|\n      if @transaction.update(transaction_params)\n        format.html { redirect_to @transaction, notice: 'Transaction was successfully updated.' }\n        format.json { head :no_content }\n      else\n        format.html { render action: 'edit' }\n        format.json { render json: @transaction.errors, status: :unprocessable_entity }\n      end\n    end\n  end\n\n  # DELETE /transactions/1\n  # DELETE /transactions/1.json\n  def destroy\n    @transaction.destroy\n    respond_to do |format|\n      format.html { redirect_to transactions_url }\n      format.json { head :no_content }\n    end\n  end\n\n  private\n    # Use callbacks to share common setup or constraints between actions.\n    def set_transaction\n      @transaction = Transaction.find(params[:id])\n    end\n\n    # Never trust parameters from the scary internet, only allow the white list through.\n    def transaction_params\n      params.require(:transaction).permit(:title, :category_id, :date, :amount)\n    end\nend\n"]],"start1":0,"start2":0,"length1":0,"length2":2026}]],"length":2026}
{"contributors":[],"silentsave":false,"ts":1378918583468,"patch":[[{"diffs":[[0," :amount"],[1,", :budget_id"],[0,")\n    en"]],"start1":2004,"start2":2004,"length1":16,"length2":28}]],"length":2038,"saved":false}
{"contributors":[],"silentsave":false,"ts":1380213511169,"patch":[[{"diffs":[[0,"tion.all"],[1,".sort(date: :asc)"],[0,"\n  end\n\n"]],"start1":216,"start2":216,"length1":16,"length2":33}]],"length":2055,"saved":false}
{"ts":1380213535097,"patch":[[{"diffs":[[0,"all."],[-1,"s"],[0,"or"],[-1,"t"],[1,"der"],[0,"(dat"]],"start1":221,"start2":221,"length1":12,"length2":13}]],"length":2056,"saved":false}
