{"ts":1378916563585,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"class Ability\n  include CanCan::Ability\n\n  def initialize(user)\n      \n   user ||= User.new # guest user (not logged in)   \n   if user.role? :superadmin\n     can :manage, :all\n     can :index, User\n   end\n   if user.role? :admin\n     can :manage, :all \n     #cannot [:destroy, :edit, :update], User #do everything except delete users or change their permissions if you are using superadmin or tiered admins.  end\n     #if user.role? :creator\n      #can [:create, :destroy, :show], :all\n     #cannot [:index, :destroy, :show, :edit, :update], User\n     #can [:show, :edit, :update], User do |current_user|\n       #user.id == current_user.id #User can only edit the current user.\n     #end\n    #end\n   elsif user.role? :user\n     can :read, :all\n     cannot :index, User\n     can [:show, :edit, :update], User do |current_user|\n       user.id == current_user.id #User can only edit the current user.\n     end\n   else \n     can :read, :all\n     cannot :index, User\n   end\n    # Define abilities for the passed in user here. For example:\n    #\n    #   user ||= User.new # guest user (not logged in)\n    #   if user.admin?\n    #     can :manage, :all\n    #   else\n    #     can :read, :all\n    #   end\n    #\n    # The first argument to `can` is the action you are giving the user \n    # permission to do.\n    # If you pass :manage it will apply to every action. Other common actions\n    # here are :read, :create, :update and :destroy.\n    #\n    # The second argument is the resource the user can perform the action on. \n    # If you pass :all it will apply to every resource. Otherwise pass a Ruby\n    # class of the resource.\n    #\n    # The third argument is an optional hash of conditions to further filter the\n    # objects.\n    # For example, here the user can only update published articles.\n    #\n    #   can :update, Article, :published => true\n    #\n    # See the wiki for details:\n    # https://github.com/ryanb/cancan/wiki/Defining-Abilities\n  end\nend\n"]],"start1":0,"start2":0,"length1":0,"length2":1959}]],"length":1959}
